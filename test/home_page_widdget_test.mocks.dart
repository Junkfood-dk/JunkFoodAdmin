// Mocks generated by Mockito 5.4.4 from annotations
// in chefapp/test/home_page_widdget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:chefapp/Data/dish_repository.dart' as _i3;
import 'package:chefapp/Domain/model/allergen_model.dart' as _i6;
import 'package:chefapp/Domain/model/dish_model.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:supabase_auth_ui/supabase_auth_ui.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSupabaseClient_0 extends _i1.SmartFake
    implements _i2.SupabaseClient {
  _FakeSupabaseClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DishRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDishRepository extends _i1.Mock implements _i3.DishRepository {
  @override
  _i2.SupabaseClient get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _FakeSupabaseClient_0(
          this,
          Invocation.getter(#database),
        ),
        returnValueForMissingStub: _FakeSupabaseClient_0(
          this,
          Invocation.getter(#database),
        ),
      ) as _i2.SupabaseClient);

  @override
  set database(_i2.SupabaseClient? _database) => super.noSuchMethod(
        Invocation.setter(
          #database,
          _database,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<List<_i5.DishModel>> fetchDishOfTheDay() => (super.noSuchMethod(
        Invocation.method(
          #fetchDishOfTheDay,
          [],
        ),
        returnValue: _i4.Future<List<_i5.DishModel>>.value(<_i5.DishModel>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.DishModel>>.value(<_i5.DishModel>[]),
      ) as _i4.Future<List<_i5.DishModel>>);

  @override
  _i4.Future<int> postDishOfTheDay(
    String? title,
    String? description,
    int? calories,
    String? imageUrl,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #postDishOfTheDay,
          [
            title,
            description,
            calories,
            imageUrl,
          ],
        ),
        returnValue: _i4.Future<int>.value(0),
        returnValueForMissingStub: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  void addAllergeneToDish(
    _i6.AllergenModel? allergene,
    int? dishId,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addAllergeneToDish,
          [
            allergene,
            dishId,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
